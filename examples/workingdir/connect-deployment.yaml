apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  creationTimestamp: null
  name: connect
spec:
  replicas: 1
  strategy: {}
  template:
    metadata:
      creationTimestamp: null
      labels:
        io.kompose.service: connect
    spec:
      containers:
      - env:
        - name: CONNECT_STATUS_STORAGE_TOPIC
          value: docker-connect-status
        - name: CONNECT_GROUP_ID
          value: compose-connect-group
        - name: CONNECT_INTERNAL_KEY_CONVERTER
          value: org.apache.kafka.connect.json.JsonConverter
        - name: CONNECT_KEY_CONVERTER
          value: io.confluent.connect.avro.AvroConverter
        - name: CONNECT_INTERNAL_VALUE_CONVERTER
          value: org.apache.kafka.connect.json.JsonConverter
        - name: CONNECT_VALUE_CONVERTER
          value: io.confluent.connect.avro.AvroConverter
        - name: CONNECT_ZOOKEEPER_CONNECT
          value: zk-1:22181,zk-2:32181,zk-3:42181
        - name: CONNECT_CONFIG_STORAGE_TOPIC
          value: docker-connect-configs
        - name: CONNECT_KEY_CONVERTER_SCHEMA_REGISTRY_URL
          value: http://schema_registry:8081
        - name: CONNECT_OFFSET_STORAGE_TOPIC
          value: docker-connect-offsets
        - name: CONNECT_VALUE_CONVERTER_SCHEMA_REGISTRY_URL
          value: http://schema_registry:8081
        - name: CONNECT_BOOTSTRAP_SERVERS
          value: kf-1:19092,kf-2:29092,kf-3:39092
        - name: CONNECT_REST_ADVERTISED_HOST_NAME
          value: connect
        - name: CONNECT_REST_PORT
          value: "8083"
        image: confluentinc/cp-kafka-connect:3.2.0-4
        name: connect
        ports:
        - containerPort: 8083
        resources: {}
      restartPolicy: Always
status: {}
